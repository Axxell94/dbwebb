Menyval 9 - create_ssn: Skapa de fyra sista siffrorna till ett födelsedatum. Skapa ett nytt menyval där Marvin ber om en sträng som innehåller ett födelse datum, t.ex. "910813". 
Din funktion ska skap de fyra sista siffrorna till det, "910813-NNNN". 
För att skapa dem, använda random modulen och slumpa fram de tre första siffrorna. 
Använd sen Luhnalgoritmen för att räkna ut den fjärde. 
Den funkar nästa på samma sätt som i menyval 7.
Algoritmen funkar på så sätt att varannan siffra multipliceras med 2 och 1, med start på första siffran i personnumret. 
Om något tal vid multiplikationen blir större än 9 ersätts det talet med dess siffersumma. Därefter summeras alla tal och här skiljer sig funktionen från menyval 7. 
Sista siffran erhålls genom att summan subtraheras från närmaste högre tiotal. Exempel med 811218-987:

   8  1 1 2 1 8  9 8  7
*  2  1 2 1 2 1  2 1  2
-------------------------
   16 1 2 2 2 8 18 8 14
Vilket blir 1 + 6 + 1 + 2 + 2 + 2 + 8 + 1 + 8 + 8 + 1 + 4 = 44, 50 - 44 = 6. Personnummret blir då 811218-9876.

För att subtrahera från närmsta tiotal kan man använda modulu operatorn, %.

Som du läst finns det funktionalitet som är samma mellan menyval 7 och 9. Därför ska du skapa en ny funktion som används i koden för menyval 7 och 9. 
Skapa create_ssn som tar emot födelsedatumet och skapar tre siffror. Skapa sen calculate_luhna_sum som tar emot en sträng med födelsedatumet och de tre siffrorna, utan -, "811218987". 
Funktionen ska räkna ut summan och returnera den, 44. I create_ssn använd summan och räkna ut sist siffran och returnera hela personnummret, med -, 811218-9876.

Uppdatera sen koden för menyval 7 så att du använder calculate_luhna_sum i den koden också, för att räkna ut summan som ska kollas om den är delbar med 10. 
Koll om talet är delbart med 10 i menyval 7 funktionen, inte i calculate_luhna_sum. Genom att återanvända funktioner på flera ställen kan vi få mer DYR kod.

Exempel:

input: "910813"     output: "910813-2201".
Eftersom tre siffror slumpas fram kommer ni inte få samma sista som i exemplet. Men om ni använder det i menyval 7 ska det vara ett giltigt personnumer

_____________________


def create_ssn(pers_nummer):
    birthday=input("Enter birthday: ")
    ssn = birthday
    rand_1 = random.randint(0,9) *2
    rand_2= random.randint(0,9)
    rand_3= random.randint(0,9) *2
    ssn = [int(x) for x in ssn]
    for i in range(0, len(ssn), 2):
        ssn[i] *= 2
    valid_ssn = int(ssn)+ rand_1 + rand_2 + rand_3 #TypeError: int() argument must be a string,
    #a bytes-like object or a real number, not 'list'.
    #Hur kan jag lösa detta?


